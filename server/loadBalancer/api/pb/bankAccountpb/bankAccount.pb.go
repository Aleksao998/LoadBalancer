// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: common/proto/bankAccount.proto

package bankAccountpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BankAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *BankAccountRequest) Reset() {
	*x = BankAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_bankAccount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountRequest) ProtoMessage() {}

func (x *BankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_bankAccount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountRequest.ProtoReflect.Descriptor instead.
func (*BankAccountRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_bankAccount_proto_rawDescGZIP(), []int{0}
}

func (x *BankAccountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BankAccountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankAccountId string `protobuf:"bytes,1,opt,name=bankAccountId,proto3" json:"bankAccountId,omitempty"`
}

func (x *BankAccountResponse) Reset() {
	*x = BankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_bankAccount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountResponse) ProtoMessage() {}

func (x *BankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_bankAccount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountResponse.ProtoReflect.Descriptor instead.
func (*BankAccountResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_bankAccount_proto_rawDescGZIP(), []int{1}
}

func (x *BankAccountResponse) GetBankAccountId() string {
	if x != nil {
		return x.BankAccountId
	}
	return ""
}

type DeleteBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBankAccountResponse) Reset() {
	*x = DeleteBankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_bankAccount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBankAccountResponse) ProtoMessage() {}

func (x *DeleteBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_bankAccount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBankAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_bankAccount_proto_rawDescGZIP(), []int{2}
}

type FetchBankAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *FetchBankAccountResponse) Reset() {
	*x = FetchBankAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_bankAccount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchBankAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchBankAccountResponse) ProtoMessage() {}

func (x *FetchBankAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_bankAccount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchBankAccountResponse.ProtoReflect.Descriptor instead.
func (*FetchBankAccountResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_bankAccount_proto_rawDescGZIP(), []int{3}
}

func (x *FetchBankAccountResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FetchBankAccountResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_common_proto_bankAccount_proto protoreflect.FileDescriptor

var file_common_proto_bankAccount_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a,
	0x12, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3b, 0x0a, 0x13, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x18, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0xa6, 0x02, 0x0a, 0x12, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e,
	0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x62,
	0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_bankAccount_proto_rawDescOnce sync.Once
	file_common_proto_bankAccount_proto_rawDescData = file_common_proto_bankAccount_proto_rawDesc
)

func file_common_proto_bankAccount_proto_rawDescGZIP() []byte {
	file_common_proto_bankAccount_proto_rawDescOnce.Do(func() {
		file_common_proto_bankAccount_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_bankAccount_proto_rawDescData)
	})
	return file_common_proto_bankAccount_proto_rawDescData
}

var file_common_proto_bankAccount_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_proto_bankAccount_proto_goTypes = []interface{}{
	(*BankAccountRequest)(nil),        // 0: bankAccount.BankAccountRequest
	(*BankAccountResponse)(nil),       // 1: bankAccount.BankAccountResponse
	(*DeleteBankAccountResponse)(nil), // 2: bankAccount.DeleteBankAccountResponse
	(*FetchBankAccountResponse)(nil),  // 3: bankAccount.FetchBankAccountResponse
}
var file_common_proto_bankAccount_proto_depIdxs = []int32{
	0, // 0: bankAccount.BankAccountService.CreateBankAccount:input_type -> bankAccount.BankAccountRequest
	0, // 1: bankAccount.BankAccountService.DeleteBankAccount:input_type -> bankAccount.BankAccountRequest
	0, // 2: bankAccount.BankAccountService.FetchBankAccount:input_type -> bankAccount.BankAccountRequest
	1, // 3: bankAccount.BankAccountService.CreateBankAccount:output_type -> bankAccount.BankAccountResponse
	2, // 4: bankAccount.BankAccountService.DeleteBankAccount:output_type -> bankAccount.DeleteBankAccountResponse
	3, // 5: bankAccount.BankAccountService.FetchBankAccount:output_type -> bankAccount.FetchBankAccountResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_proto_bankAccount_proto_init() }
func file_common_proto_bankAccount_proto_init() {
	if File_common_proto_bankAccount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_bankAccount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_bankAccount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_bankAccount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_bankAccount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchBankAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_bankAccount_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_proto_bankAccount_proto_goTypes,
		DependencyIndexes: file_common_proto_bankAccount_proto_depIdxs,
		MessageInfos:      file_common_proto_bankAccount_proto_msgTypes,
	}.Build()
	File_common_proto_bankAccount_proto = out.File
	file_common_proto_bankAccount_proto_rawDesc = nil
	file_common_proto_bankAccount_proto_goTypes = nil
	file_common_proto_bankAccount_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BankAccountServiceClient is the client API for BankAccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BankAccountServiceClient interface {
	CreateBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*BankAccountResponse, error)
	DeleteBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*DeleteBankAccountResponse, error)
	FetchBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*FetchBankAccountResponse, error)
}

type bankAccountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBankAccountServiceClient(cc grpc.ClientConnInterface) BankAccountServiceClient {
	return &bankAccountServiceClient{cc}
}

func (c *bankAccountServiceClient) CreateBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*BankAccountResponse, error) {
	out := new(BankAccountResponse)
	err := c.cc.Invoke(ctx, "/bankAccount.BankAccountService/CreateBankAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankAccountServiceClient) DeleteBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*DeleteBankAccountResponse, error) {
	out := new(DeleteBankAccountResponse)
	err := c.cc.Invoke(ctx, "/bankAccount.BankAccountService/DeleteBankAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankAccountServiceClient) FetchBankAccount(ctx context.Context, in *BankAccountRequest, opts ...grpc.CallOption) (*FetchBankAccountResponse, error) {
	out := new(FetchBankAccountResponse)
	err := c.cc.Invoke(ctx, "/bankAccount.BankAccountService/FetchBankAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BankAccountServiceServer is the server API for BankAccountService service.
type BankAccountServiceServer interface {
	CreateBankAccount(context.Context, *BankAccountRequest) (*BankAccountResponse, error)
	DeleteBankAccount(context.Context, *BankAccountRequest) (*DeleteBankAccountResponse, error)
	FetchBankAccount(context.Context, *BankAccountRequest) (*FetchBankAccountResponse, error)
}

// UnimplementedBankAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBankAccountServiceServer struct {
}

func (*UnimplementedBankAccountServiceServer) CreateBankAccount(context.Context, *BankAccountRequest) (*BankAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBankAccount not implemented")
}
func (*UnimplementedBankAccountServiceServer) DeleteBankAccount(context.Context, *BankAccountRequest) (*DeleteBankAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBankAccount not implemented")
}
func (*UnimplementedBankAccountServiceServer) FetchBankAccount(context.Context, *BankAccountRequest) (*FetchBankAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchBankAccount not implemented")
}

func RegisterBankAccountServiceServer(s *grpc.Server, srv BankAccountServiceServer) {
	s.RegisterService(&_BankAccountService_serviceDesc, srv)
}

func _BankAccountService_CreateBankAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankAccountServiceServer).CreateBankAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bankAccount.BankAccountService/CreateBankAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankAccountServiceServer).CreateBankAccount(ctx, req.(*BankAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BankAccountService_DeleteBankAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankAccountServiceServer).DeleteBankAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bankAccount.BankAccountService/DeleteBankAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankAccountServiceServer).DeleteBankAccount(ctx, req.(*BankAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BankAccountService_FetchBankAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankAccountServiceServer).FetchBankAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bankAccount.BankAccountService/FetchBankAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankAccountServiceServer).FetchBankAccount(ctx, req.(*BankAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BankAccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bankAccount.BankAccountService",
	HandlerType: (*BankAccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBankAccount",
			Handler:    _BankAccountService_CreateBankAccount_Handler,
		},
		{
			MethodName: "DeleteBankAccount",
			Handler:    _BankAccountService_DeleteBankAccount_Handler,
		},
		{
			MethodName: "FetchBankAccount",
			Handler:    _BankAccountService_FetchBankAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common/proto/bankAccount.proto",
}
